@page "/asistencia/salida"
@using AppAsist.Client.Servicios
@inject IHttpServicio http
@inject NavigationManager navigationManager

<h3>Registrar Salida</h3>

<EditForm Model="salidaModel" OnValidSubmit="RegistrarSalida">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Código QR</label>
        <div>
            <InputText class="form-control" @bind-Value="@salidaModel.CodigoQR" />
            <ValidationMessage For="@(() => salidaModel.CodigoQR)" />
        </div>
    </div>
    <br />
    <button class="btn btn-primary" type="submit">Registrar Salida</button>
    <button class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    private SalidaModel salidaModel = new SalidaModel();

    private async Task RegistrarSalida()
    {
        var httpRespuesta = await http.Post<string>("api/Asistencia/salida", salidaModel.CodigoQR);
        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
            // Manejo de errores
        }
        else
        {
            // Si la salida fue registrada correctamente, navega a la vista principal de asistencia
            navigationManager.NavigateTo("/asistencia");
        }
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/asistencia");
    }

    public class SalidaModel
    {
        public string CodigoQR { get; set; }
    }
}
